# Estágio de build
FROM node:18-slim AS builder

# Instala dependências do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    build-essential \
    pkg-config \
    pango1.0-tools \
    libcairo2-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    && rm -rf /var/lib/apt/lists/*

# Instala o Bun
RUN curl -fsSL https://bun.sh/install | bash -s "bun-v1.2.3"
ENV BUN_INSTALL="/root/.bun"
ENV PATH="$BUN_INSTALL/bin:$PATH"

# Configura o diretório de trabalho
WORKDIR /app

# Copia os arquivos de definição de dependências
COPY package.json bun.lock* ./

# Instala as dependências
RUN bun install --frozen-lockfile

# Copia o restante dos arquivos do projeto
COPY . .

# Compila o projeto
RUN bun run build

# Estágio de produção
FROM node:18-slim

# Instala dependências do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    pango1.0-tools \
    libcairo2 \
    libjpeg62-turbo \
    libgif7 \
    librsvg2-2 \
    && rm -rf /var/lib/apt/lists/*

# Instala o Bun
RUN curl -fsSL https://bun.sh/install | bash -s "bun-v1.2.3"
ENV BUN_INSTALL="/root/.bun"
ENV PATH="$BUN_INSTALL/bin:$PATH"

# Configura o diretório de trabalho
WORKDIR /app

# Copia os arquivos do estágio de build
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json .

# Expõe a porta da aplicação
EXPOSE 6541

# Comando para iniciar a aplicação
CMD ["bun", "run", "start"]
